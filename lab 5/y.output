Grammar

    0 $accept: S $end

    1 S: E '\n'

    2 E: E '+' T
    3  | E '-' T
    4  | T

    5 T: T '*' F
    6  | T '/' F
    7  | F

    8 F: NUMBER
    9  | FLOAT
   10  | STRING
   11  | '(' E ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1
    '(' (40) 11
    ')' (41) 11
    '*' (42) 5
    '+' (43) 2
    '-' (45) 3
    '/' (47) 6
    error (256)
    STRING <node> (258) 10
    NUMBER <node> (259) 8
    FLOAT <node> (260) 9


Nonterminals, with rules where they appear

    $accept (13)
        on left: 0
    S <node> (14)
        on left: 1
        on right: 0
    E <node> (15)
        on left: 2 3 4
        on right: 1 2 3 11
    T <node> (16)
        on left: 5 6 7
        on right: 2 3 4 5 6
    F <node> (17)
        on left: 8 9 10 11
        on right: 5 6 7


State 0

    0 $accept: . S $end

    STRING  shift, and go to state 1
    NUMBER  shift, and go to state 2
    FLOAT   shift, and go to state 3
    '('     shift, and go to state 4

    S  go to state 5
    E  go to state 6
    T  go to state 7
    F  go to state 8


State 1

   10 F: STRING .

    $default  reduce using rule 10 (F)


State 2

    8 F: NUMBER .

    $default  reduce using rule 8 (F)


State 3

    9 F: FLOAT .

    $default  reduce using rule 9 (F)


State 4

   11 F: '(' . E ')'

    STRING  shift, and go to state 1
    NUMBER  shift, and go to state 2
    FLOAT   shift, and go to state 3
    '('     shift, and go to state 4

    E  go to state 9
    T  go to state 7
    F  go to state 8


State 5

    0 $accept: S . $end

    $end  shift, and go to state 10


State 6

    1 S: E . '\n'
    2 E: E . '+' T
    3  | E . '-' T

    '\n'  shift, and go to state 11
    '+'   shift, and go to state 12
    '-'   shift, and go to state 13


State 7

    4 E: T .
    5 T: T . '*' F
    6  | T . '/' F

    '*'  shift, and go to state 14
    '/'  shift, and go to state 15

    $default  reduce using rule 4 (E)


State 8

    7 T: F .

    $default  reduce using rule 7 (T)


State 9

    2 E: E . '+' T
    3  | E . '-' T
   11 F: '(' E . ')'

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    ')'  shift, and go to state 16


State 10

    0 $accept: S $end .

    $default  accept


State 11

    1 S: E '\n' .

    $default  reduce using rule 1 (S)


State 12

    2 E: E '+' . T

    STRING  shift, and go to state 1
    NUMBER  shift, and go to state 2
    FLOAT   shift, and go to state 3
    '('     shift, and go to state 4

    T  go to state 17
    F  go to state 8


State 13

    3 E: E '-' . T

    STRING  shift, and go to state 1
    NUMBER  shift, and go to state 2
    FLOAT   shift, and go to state 3
    '('     shift, and go to state 4

    T  go to state 18
    F  go to state 8


State 14

    5 T: T '*' . F

    STRING  shift, and go to state 1
    NUMBER  shift, and go to state 2
    FLOAT   shift, and go to state 3
    '('     shift, and go to state 4

    F  go to state 19


State 15

    6 T: T '/' . F

    STRING  shift, and go to state 1
    NUMBER  shift, and go to state 2
    FLOAT   shift, and go to state 3
    '('     shift, and go to state 4

    F  go to state 20


State 16

   11 F: '(' E ')' .

    $default  reduce using rule 11 (F)


State 17

    2 E: E '+' T .
    5 T: T . '*' F
    6  | T . '/' F

    '*'  shift, and go to state 14
    '/'  shift, and go to state 15

    $default  reduce using rule 2 (E)


State 18

    3 E: E '-' T .
    5 T: T . '*' F
    6  | T . '/' F

    '*'  shift, and go to state 14
    '/'  shift, and go to state 15

    $default  reduce using rule 3 (E)


State 19

    5 T: T '*' F .

    $default  reduce using rule 5 (T)


State 20

    6 T: T '/' F .

    $default  reduce using rule 6 (T)
